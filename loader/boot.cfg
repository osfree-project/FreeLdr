;
; FreeLdr menu file
;

; menu options
default = 2
timeout = 30
menubg = 1
menufg = 7
screenbg = 2
screenfg = 1
screenbghl = 0
screenfghl = 5
width  = 56
height = 10

set R       = (cd)
set PN      = $(R)\pns
set L4      = $(R)\l4
set OS2     = $(R)\os3
set CFG     = $(R)\cfg
set LX      = $(R)\lx
set RD_DENV = $(LX)\image-bb
set VMODE   = 0x117
set MODADDR = 0x02000000
set FIASCOARGS = "-serial -jdb_never_stop -tbuf_entries=32768 -jdb_cmd=JH"

title   OS/2 boot with memboot
kernel  (cd)\boot\loader\bt_chain.mdl -bootdev=(cd)
module  (cd)\bootimgs\cdloader.bin
module  --type lip

title   L4Ka::Pistachio with pingpong test
kernel  (cd)\l4ka\kickstart
module  (cd)\l4ka\i586-kernel
module  (cd)\l4ka\sigma0
module  (cd)\l4ka\pingpong

title   Pistachio with pingpong (hd0,0), from NTFS partition
kernel  (hd0,0)\l4ka\kickstart
module  (hd0,0)\l4ka\i586-kernel
module  (hd0,0)\l4ka\sigma0
module  (hd0,0)\l4ka\pingpong

title   Pistachio with pingpong (hd0,4), from FAT16 partition
kernel  (hd0,4)\l4ka\kickstart
module  (hd0,4)\l4ka\i586-kernel
module  (hd0,4)\l4ka\sigma0
module  (hd0,4)\l4ka\pingpong

title   Pistachio with pingpong (hd0,5), from JFS partition
kernel  (hd0,5)\l4ka\kickstart
module  (hd0,5)\l4ka\i586-kernel
module  (hd0,5)\l4ka\sigma0
module  (hd0,5)\l4ka\pingpong

title   Pistachio with pingpong (hd0,9), from FAT32 partition
kernel  (hd0,9)\l4ka\kickstart
module  (hd0,9)\l4ka\i586-kernel
module  (hd0,9)\l4ka\sigma0
module  (hd0,9)\l4ka\pingpong

title   Pistachio with pingpong from FAT floppy
kernel  (fd0)\kickstart
module  (fd0)\i586-kernel
module  (fd0)\sigma0
module  (fd0)\pingpong

title    L4/Fiasco with pingpong benchmark
kernel   $(L4)\bootstrap -serial
modaddr  $(MODADDR)
module   $(L4)\fiasco $(FIASCOARGS)
module   $(L4)\sigma0
module   $(L4)\roottask
module   $(PN)\pingpong

title fiasco + loader + l4lx26.ux with BMODFS
kernel $(L4)\bootstrap -serial
modaddr $(MODADDR)
module $(L4)\fiasco $(FIASCOARGS)
module $(L4)\sigma0
module $(L4)\roottask task modname "bmodfs" attached 4 modules
module $(PN)\names
module $(PN)\log --prio 0xA1
module $(PN)\dm_phys --isa=0x00800000
module $(PN)\simple_ts -t 900
module $(PN)\rtc
module $(PN)\l4io --noirq
module $(PN)\l4con --l4io --cpuload
module $(PN)\bmodfs
  module $(CFG)\l4linux26.cfg
  module $(PN)\libloader.s.so
  module $(LX)\vmlinuz26.ux
  module $(RD_DENV)
module $(PN)\loader --fprov=BMODFS l4linux26.cfg
vbeset $(VMODE)

title   DOpE
kernel  (cd)\l4\bootstrap -serial
modaddr $(MODADDR)
module  (cd)\l4\fiasco $(FIASCOARGS)
module  (cd)\l4\sigma0
module  (cd)\l4\roottask
module  (cd)\pns\names
module  (cd)\pns\log
module  (cd)\pns\dm_phys
module  (cd)\pns\l4io
module  (cd)\pns\l4dope
module  (cd)\pns\vscrtest
vbeset  $(VMODE)

title   Nitpicker with dope
kernel  (cd)\l4\bootstrap -serial
modaddr $(MODADDR)
module  (cd)\l4\fiasco $(FIASCOARGS)
module  (cd)\l4\sigma0
module  (cd)\l4\roottask
module  (cd)\pns\names
module  (cd)\pns\log
module  (cd)\pns\dm_phys
module  (cd)\pns\l4io
module  (cd)\pns\nitpicker
module  (cd)\pns\nitdope
module  (cd)\pns\vscrtest
vbeset  $(VMODE)

title A Nitpicker's Guide to a minimal-complexity secure GUI
kernel $(L4)\bootstrap
modaddr 0x02000000
module $(L4)\fiasco $(FIASCOARGS)
module $(L4)\sigma0
module $(L4)\roottask task modname "bmodfs" attached 8 modules
module $(PN)\log
module $(PN)\names
module $(PN)\dm_phys
module $(PN)\l4io --noirq
module $(PN)\simple_ts -t 380
module $(PN)\rtc
module $(PN)\nitpicker
module $(PN)\nitovlwm
module $(PN)\loader --fprov BMODFS nitdope.cfg l4lx26.cfg ; usbhid "nitpicker_tutorial --fprov BMODFS"
module $(PN)\bmodfs
  module $(LX)\vmlinuz26
  module $(CFG)\l4lx26.cfg
  module $(CFG)\nitdope.cfg
  module $(PN)\nitdope
  module $(PN)\vscrtest
  module $(PN)\usbhid
  module $(LX)\drops-x.rd
  module $(PN)\libloader.s.so
vbeset $(VMODE)

title  L4linux/L4Con
kernel $(L4)\bootstrap
modaddr 0x02000000
module $(L4)\fiasco $(FIASCOARGS)
module $(L4)\sigma0
module $(L4)\roottask task modname "loader" allow_cli task modname "bmodfs" attached 5 modules
module $(PN)\log
module $(PN)\names
module $(PN)\dm_phys
module $(PN)\l4io
module $(PN)\simple_ts -t 380
module $(PN)\rtc
module $(PN)\l4con --cpuload
module $(PN)\loader --fprov BMODFS l4lx26.cfg
module $(PN)\bmodfs
  module $(LX)\vmlinuz26
  module $(CFG)\l4lx26.cfg
  ;module $(PN)\usbhid
  ;module $(PN)\backdrop
  ;module $(PN)\reboot
  module $(LX)\drops-x.rd
  module $(PN)\libloader.s.so
  module $(PN)\libld-l4.s.so
vbeset $(VMODE) ; 0x117 323c46

title    OS/2 server prototype test via l4vfs
kernel   $(L4)\bootstrap
modaddr  $(MODADDR)
module   $(L4)\fiasco $(FIASCOARGS)
module   $(L4)\sigma0
module   $(L4)\roottask task modname "simple_file_server" attached 8 modules
module   $(PN)\log
module   $(PN)\names
module   $(PN)\dm_phys
module   $(PN)\simple_ts -t 300
module   $(PN)\rtc
module   $(PN)\l4io
module   $(PN)\l4con
module   $(PN)\name_server
module   $(PN)\simple_file_server
  module   $(OS2)\os2server
  module   $(OS2)\os2.cfg
  module   $(OS2)\config.sys
  module   $(OS2)\libkal.s.so
  module   $(OS2)\VioWrtTTY_test
  module   $(OS2)\MiniELFExe.exe
  module   $(PN)\libloader.s.so
  module   $(PN)\libld-l4.s.so
module   $(PN)\fstab -c /filesets -c /filesets/bootstrap_fs -v 14 -b / -m /filesets/bootstrap_fs
module   $(PN)\fprov_proxy
module   $(PN)\loader --fprov=fprov_proxy_fs /filesets/bootstrap_fs/os2.cfg
vbeset   $(VMODE)

title  linux from /dev/sda9
kernel (cd)\boot\loader\bt_linux.mdl
module (cd)\linux\vmlinuz BOOT_IMAGE=linux root=/dev/sda9  resume=/dev/sda8 splash=silent vga=788
module (cd)\linux\initrd.img
module  --type lip

title   Linux with bt_linux
kernel  (cd)\boot\loader\bt_linux.mdl
module  (cd)\linux\vmlinuz ramdisk_size=100000 init=/etc/init lang=us initrd=cdrom.gz ; vga=791
module  (cd)\linux\initrd.img
module  --type lip

title L4Linux 2.6 [console]
kernel $(L4)\bootstrap -serial
modaddr 0x02000000
module $(L4)\fiasco $(FIASCOARGS)
module $(L4)\sigma0
module $(L4)\roottask -symbols -lines task modname "loader" boot_priority 0xA0 allow_cli task modname "bmodfs" attached 7 modules
module $(L4)\fiasco_symbols
module $(L4)\fiasco_lines
module $(PN)\names
module $(PN)\log --prio 0xA1 --buffer 0
module $(PN)\dm_phys
module $(PN)\simple_ts -t 380
module $(PN)\rtc
module $(PN)\l4io
module $(PN)\bmodfs
  module $(PN)\libloader.s.so
  module $(PN)\libld-l4.s.so
  module $(PN)\run
  module $(CFG)\run.cfg
  module $(LX)\vmlinuz26
  module $(CFG)\l4linux26.cfg
  module $(LX)\initrd.img
module $(PN)\l4con
module $(PN)\loader --fprov=BMODFS run.cfg l4linux26.cfg
vbeset $(VMODE)

title L4Linux 2.6 [nitdope]
kernel $(L4)\bootstrap -serial
modaddr 0x02000000
module $(L4)\fiasco $(FIASCOARGS)
module $(L4)\sigma0
module $(L4)\roottask -symbols -lines task modname "loader" boot_priority 0xA0 allow_cli task modname "bmodfs" attached 5 modules
module $(L4)\fiasco_symbols
module $(L4)\fiasco_lines
module $(PN)\names
module $(PN)\log --prio 0xA1 --buffer 0
module $(PN)\dm_phys
module $(PN)\simple_ts -t 380
module $(PN)\rtc
module $(PN)\l4io
module $(PN)\bmodfs
  module $(PN)\libloader.s.so
  module $(PN)\libld-l4.s.so
  module $(LX)\vmlinuz26
  module $(CFG)\l4linux26.cfg
  module $(LX)\initrd.img
module $(PN)\nitpicker
module $(PN)\nitdope
module $(PN)\vscrtest
module $(PN)\loader --fprov=BMODFS l4linux26.cfg
vbeset $(VMODE)

title   ext2fs microfsd through bt_linux
kernel  (cd)\boot\loader\bt_linux.mdl
module  (cd)\ext2\microfsd.fsd os2_bios_device=0x80 os2_bootdrive=3 os2_hidden_sectors=0x11 os2_sect=17 os2_head=4 os2_total_sectors=0xffcc os2_bytes_per_sector=512
module  --type lip

title   Memtest86 with bt_linux
kernel  (cd)\boot\loader\bt_linux.mdl
module  (cd)\memtest86\memtest
module  --type lip

title   FreeDOS with memdisk (from syslinux) with bt_linux
kernel  (cd)\boot\loader\bt_linux.mdl
module  (cd)\memdisk\memdisk
module  (cd)\floppies\balder.img
module  --type lip

title   FreeDOS32 with memdisk (from syslinux) with bt_linux
kernel  (cd)\boot\loader\bt_linux.mdl
module  (cd)\memdisk\memdisk
module  (cd)\floppies\freedos32.img
module  --type lip

title  FreeDos32 via multiboot
kernel \fd32\bin\fd32.bin --tick 10000
module \fd32\bin\floppy.o
module \fd32\bin\atadrv.o
module \fd32\bin\clockdrv.o
module \fd32\bin\unicode.o
module \fd32\bin\nls.o
module \fd32\bin\fat.o
module \fd32\bin\psmouse.o
module \fd32\bin\keybdrv.o
module \fd32\bin\consdrv.o
module \fd32\bin\dpmi.o
module \fd32\command.exe

title   OS/2 with bt_os2
kernel  (cd)\boot\loader\bt_os2.mdl -lip
module  --type lip

title   Load an OS from floppy
kernel  (cd)\boot\loader\bt_chain.mdl -bootdev=(fd0)
module  (fd0)0+1
module  --type lip

title   Load a MBR of first HDD (chainloading)
kernel  (cd)\boot\loader\bt_chain.mdl -bootdev=(hd0)
module  (hd0)0+1
module  --type lip

title   Load a MBR of second HDD (chainloading)
kernel  (cd)\boot\loader\bt_chain.mdl -bootdev=(hd1)
module  (hd1)0+1
module  --type lip

title   Load a bootsector of first primary partition (chainloading)
kernel  (cd)\boot\loader\bt_chain.mdl -bootdev=(hd0)
module  (hd0,0)0+1
module  --type lip

title   Load a bootsector of second primary partition (chainloading)
kernel  (cd)\boot\loader\bt_chain.mdl -bootdev=(hd0)
module  (hd0,1)0+1
module  --type lip

title   Start FreeLdr again (chainloading)
kernel  (cd)\boot\loader\bt_chain.mdl -bootdev=(cd)
module  (cd)\boot\bootblk
module  --type lip

title   ReactOS via multiboot
kernel  (cd)\loader\setupldr.sys
